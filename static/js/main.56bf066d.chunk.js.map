{"version":3,"sources":["pages/UrlEncoder/UrlEncoder.tsx","pages/Home/Home.tsx","components/Dock.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["UrlEncoder","props","_onInputChanged","e","value","newValue","setState","userDefinedValue","canProcess","state","unprocessedValue","_Encode","processedValue","encodeURI","_Decode","decodeURI","this","Stack","className","tokens","childrenGap","padding","horizontal","grow","TextField","label","multiline","rows","onChange","readOnly","PrimaryButton","text","disabled","onClick","React","Component","Home","Dock","StackItem","DefaultButton","iconProps","iconName","href","title","App","verticalFill","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","appTheme","createTheme","palette","themePrimary","themeLighterAlt","themeLighter","themeLight","themeTertiary","themeSecondary","themeDarkAlt","themeDark","themeDarker","neutralLighterAlt","neutralLighter","neutralLight","neutralQuaternaryAlt","neutralQuaternary","neutralTertiaryAlt","neutralTertiary","neutralSecondary","neutralPrimaryAlt","neutralPrimary","neutralDark","black","white","initializeIcons","ReactDOM","render","StrictMode","ThemeProvider","theme","document","getElementById"],"mappings":"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","file":"static/js/main.56bf066d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { PrimaryButton, Stack, TextField } from \"@fluentui/react\";\r\nimport './UrlEncoder.css';\r\n\r\ninterface IUrlEncoderProps { }\r\n\r\ninterface IUrlEncoderState {\r\n    userDefinedValue: string;\r\n    unprocessedValue: string;\r\n    processedValue: string;\r\n    canProcess: boolean;\r\n}\r\n\r\nexport default class UrlEncoder extends React.Component<IUrlEncoderProps, IUrlEncoderState> {\r\n    public constructor(props: IUrlEncoderProps) {\r\n        super(props);\r\n        this.state = {\r\n            userDefinedValue: '',\r\n            processedValue: '',\r\n            unprocessedValue: '',\r\n            canProcess: false\r\n        };\r\n    }\r\n\r\n    private _onInputChanged = (e?: any, value?: string) => {\r\n        const newValue = value || '';\r\n        this.setState({\r\n            userDefinedValue: newValue,\r\n            canProcess: this.state.unprocessedValue !== newValue\r\n        });\r\n    }\r\n\r\n    private _Encode = () => {\r\n        const { userDefinedValue } = this.state;\r\n        this.setState({\r\n            unprocessedValue: userDefinedValue,\r\n            processedValue: encodeURI(userDefinedValue),\r\n            canProcess: false\r\n        });\r\n    }\r\n\r\n    private _Decode = () => {\r\n        const { userDefinedValue } = this.state;\r\n        this.setState({\r\n            unprocessedValue: userDefinedValue,\r\n            processedValue: decodeURI(userDefinedValue),\r\n            canProcess: false\r\n        });\r\n    }\r\n\r\n    public render() {\r\n        const { userDefinedValue, processedValue, canProcess } = this.state;\r\n        return <>\r\n            <Stack className=\"UrlEncoder\" tokens={{ childrenGap: 20, padding: 20 }}>\r\n                <Stack horizontal grow tokens={{ childrenGap: 10 }}>\r\n                    <TextField label=\"Input\" multiline value={userDefinedValue} rows={20} onChange={this._onInputChanged} />\r\n                    <TextField label=\"Output\" multiline value={processedValue} rows={20} readOnly />\r\n                </Stack>\r\n                <Stack horizontal grow tokens={{ childrenGap: 10 }}>\r\n                    <PrimaryButton text=\"Encode\" disabled={!canProcess} onClick={this._Encode} />\r\n                    <PrimaryButton text=\"Decode\" disabled={!canProcess} onClick={this._Decode} />\r\n                </Stack>\r\n            </Stack>\r\n        </>;\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nexport default class Home extends React.Component<any> {\r\n    public render() {\r\n        return <div className=\"Home\">\r\n            <span>Home page</span>\r\n        </div>;\r\n    }\r\n}","import React from 'react';\r\nimport './Dock.css';\r\nimport { DefaultButton, Stack, StackItem } from '@fluentui/react';\r\n\r\nexport default class Dock extends React.Component<any> {\r\n    public render() {\r\n        return <Stack className=\"Dock\" horizontal tokens={{ childrenGap: 2 }}>\r\n            <StackItem>\r\n                <DefaultButton iconProps={{ iconName: \"WindowsLogo\" }} href=\"#\" title=\"Home\" />\r\n            </StackItem>\r\n            <StackItem>\r\n                <DefaultButton iconProps={{ iconName: \"ChangeEntitlements\" }} href=\"#/tools/url-encoder\" title=\"URL Encoder\" />\r\n            </StackItem>\r\n        </Stack>;\r\n    }\r\n}","import React from \"react\";\r\nimport UrlEncoder from \"./pages/UrlEncoder/UrlEncoder\";\r\nimport Home from './pages/Home/Home';\r\nimport Dock from './components/Dock';\r\nimport \"./App.css\";\r\nimport { Route, Switch } from \"react-router\";\r\nimport { Stack, StackItem } from \"@fluentui/react\";\r\n\r\nexport default class App extends React.Component {\r\n    public render() {\r\n        return <div className=\"App\">\r\n            <Stack verticalFill>\r\n                <StackItem className=\"AppContent\" grow>\r\n                    <Switch>\r\n                        <Route exact path=\"/\" component={Home} />\r\n                        <Route exact path=\"/tools/url-encoder\" component={UrlEncoder} />\r\n                    </Switch>\r\n                </StackItem>\r\n                <StackItem className=\"AppDock\">\r\n                    <Route path=\"*\" component={Dock} />\r\n                </StackItem>\r\n            </Stack>\r\n        </div>;\r\n    }\r\n}\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { initializeIcons, ThemeProvider } from '@fluentui/react';\r\nimport { createTheme } from \"@fluentui/style-utilities\";\r\n\r\nconst appTheme = createTheme({\r\n    palette: {\r\n        themePrimary: \"#a8a8a8\",\r\n        themeLighterAlt: \"#070707\",\r\n        themeLighter: \"#1b1b1b\",\r\n        themeLight: \"#323232\",\r\n        themeTertiary: \"#656565\",\r\n        themeSecondary: \"#949494\",\r\n        themeDarkAlt: \"#b1b1b1\",\r\n        themeDark: \"#bdbdbd\",\r\n        themeDarker: \"#cecece\",\r\n        neutralLighterAlt: \"#4a4a4a\",\r\n        neutralLighter: \"#525252\",\r\n        neutralLight: \"#5e5e5e\",\r\n        neutralQuaternaryAlt: \"#656565\",\r\n        neutralQuaternary: \"#6b6b6b\",\r\n        neutralTertiaryAlt: \"#848484\",\r\n        neutralTertiary: \"#c8c8c8\",\r\n        neutralSecondary: \"#d0d0d0\",\r\n        neutralPrimaryAlt: \"#dadada\",\r\n        neutralPrimary: \"#ffffff\",\r\n        neutralDark: \"#f4f4f4\",\r\n        black: \"#f8f8f8\",\r\n        white: \"#424242\",\r\n    },\r\n});\r\n\r\ninitializeIcons();\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <HashRouter>\r\n            <ThemeProvider theme={appTheme}>\r\n                <App />\r\n            </ThemeProvider>\r\n        </HashRouter>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}
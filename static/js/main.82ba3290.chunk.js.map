{"version":3,"sources":["pages/UrlEncoder/UrlEncoder.tsx","pages/Home/Home.tsx","components/NavBar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["UrlEncoder","props","_onInputChanged","e","value","newValue","setState","userDefinedValue","canProcess","state","unprocessedValue","_Encode","processedValue","encodeURI","_Decode","decodeURI","this","Stack","className","tokens","childrenGap","padding","horizontal","grow","TextField","label","multiline","rows","onChange","readOnly","PrimaryButton","text","disabled","onClick","React","Component","Home","NavBar","_onNavLinkClicked","ev","item","preventDefault","href","history","push","CommandBar","items","key","subMenuProps","App","ScrollablePane","Sticky","stickyClassName","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","appTheme","createTheme","palette","themePrimary","themeLighterAlt","themeLighter","themeLight","themeTertiary","themeSecondary","themeDarkAlt","themeDark","themeDarker","neutralLighterAlt","neutralLighter","neutralLight","neutralQuaternaryAlt","neutralQuaternary","neutralTertiaryAlt","neutralTertiary","neutralSecondary","neutralPrimaryAlt","neutralPrimary","neutralDark","black","white","ReactDOM","render","StrictMode","ThemeProvider","theme","document","getElementById"],"mappings":"oUAaqBA,E,kDACjB,WAAmBC,GAA0B,IAAD,8BACxC,cAAMA,IASFC,gBAAkB,SAACC,EAASC,GAChC,IAAMC,EAAWD,GAAS,GAC1B,EAAKE,SAAS,CACVC,iBAAkBF,EAClBG,WAAY,EAAKC,MAAMC,mBAAqBL,KAdR,EAkBpCM,QAAU,WACd,IAAQJ,EAAqB,EAAKE,MAA1BF,iBACR,EAAKD,SAAS,CACVI,iBAAkBH,EAClBK,eAAgBC,UAAUN,GAC1BC,YAAY,KAvBwB,EA2BpCM,QAAU,WACd,IAAQP,EAAqB,EAAKE,MAA1BF,iBACR,EAAKD,SAAS,CACVI,iBAAkBH,EAClBK,eAAgBG,UAAUR,GAC1BC,YAAY,KA9BhB,EAAKC,MAAQ,CACTF,iBAAkB,GAClBK,eAAgB,GAChBF,iBAAkB,GAClBF,YAAY,GANwB,E,0CAoC5C,WACI,MAAyDQ,KAAKP,MAAtDF,EAAR,EAAQA,iBAAkBK,EAA1B,EAA0BA,eAAgBJ,EAA1C,EAA0CA,WAC1C,OAAO,mCACH,eAACS,EAAA,EAAD,CAAOC,UAAU,aAAaC,OAAQ,CAAEC,YAAa,GAAIC,QAAS,IAAlE,UACI,eAACJ,EAAA,EAAD,CAAOK,YAAU,EAACC,MAAI,EAACJ,OAAQ,CAAEC,YAAa,IAA9C,UACI,cAACI,EAAA,EAAD,CAAWC,MAAM,QAAQC,WAAS,EAACtB,MAAOG,EAAkBoB,KAAM,GAAIC,SAAUZ,KAAKd,kBACrF,cAACsB,EAAA,EAAD,CAAWC,MAAM,SAASC,WAAS,EAACtB,MAAOQ,EAAgBe,KAAM,GAAIE,UAAQ,OAEjF,eAACZ,EAAA,EAAD,CAAOK,YAAU,EAACC,MAAI,EAACJ,OAAQ,CAAEC,YAAa,IAA9C,UACI,cAACU,EAAA,EAAD,CAAeC,KAAK,SAASC,UAAWxB,EAAYyB,QAASjB,KAAKL,UAClE,cAACmB,EAAA,EAAD,CAAeC,KAAK,SAASC,UAAWxB,EAAYyB,QAASjB,KAAKF,sB,GA/C9CoB,IAAMC,WCXzBC,E,4JACjB,WACI,OAAO,iC,GAFmBF,IAAMC,W,SCCnBE,E,4MACTC,kBAAoB,SAACC,EAAUC,GAC/BD,GACAA,EAAGE,iBAEHD,GAAQA,EAAKE,MACb,EAAKzC,MAAM0C,QAAQC,KAAKJ,EAAKE,O,4CAIrC,WACI,OAAO,cAACG,EAAA,EAAD,CACHC,MAAO,CACH,CACIC,IAAK,QACLhB,KAAM,cACNW,KAAM,IACNT,QAASjB,KAAKsB,mBAElB,CACIS,IAAK,QACLhB,KAAM,QACNiB,aAAc,CACVF,MAAO,CACH,CACIC,IAAK,cACLhB,KAAM,cACNW,KAAM,qBACNT,QAASjB,KAAKsB,6B,GA5BVJ,IAAMC,W,mCCKrBc,E,4JACjB,WACI,OACI,eAACC,EAAA,EAAD,CAAgBhC,UAAU,MAA1B,UACI,cAACiC,EAAA,EAAD,CAAQC,gBAAgB,SAAxB,SACI,cAAC,IAAD,CAAOC,KAAK,IAAIC,UAAWjB,MAE/B,eAAC,IAAD,WACI,cAAC,IAAD,CAAOkB,OAAK,EAACF,KAAK,IAAIC,UAAWlB,IACjC,cAAC,IAAD,CAAOmB,OAAK,EAACF,KAAK,qBAAqBC,UAAWtD,c,GATrCkC,IAAMC,WCMxBqB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,wBCARQ,EAAWC,YAAY,CACzBC,QAAS,CACLC,aAAc,UACdC,gBAAiB,UACjBC,aAAc,UACdC,WAAY,UACZC,cAAe,UACfC,eAAgB,UAChBC,aAAc,UACdC,UAAW,UACXC,YAAa,UACbC,kBAAmB,UACnBC,eAAgB,UAChBC,aAAc,UACdC,qBAAsB,UACtBC,kBAAmB,UACnBC,mBAAoB,UACpBC,gBAAiB,UACjBC,iBAAkB,UAClBC,kBAAmB,UACnBC,eAAgB,UAChBC,YAAa,UACbC,MAAO,UACPC,MAAO,aAIfC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,UACI,cAACC,EAAA,EAAD,CAAeC,MAAO7B,EAAtB,SACI,cAAC,EAAD,UAIZ8B,SAASC,eAAe,SAM5BxC,M","file":"static/js/main.82ba3290.chunk.js","sourcesContent":["import React from \"react\";\nimport { PrimaryButton, Stack, TextField } from \"@fluentui/react\";\nimport './UrlEncoder.css';\n\ninterface IUrlEncoderProps { }\n\ninterface IUrlEncoderState {\n    userDefinedValue: string;\n    unprocessedValue: string;\n    processedValue: string;\n    canProcess: boolean;\n}\n\nexport default class UrlEncoder extends React.Component<IUrlEncoderProps, IUrlEncoderState> {\n    public constructor(props: IUrlEncoderProps) {\n        super(props);\n        this.state = {\n            userDefinedValue: '',\n            processedValue: '',\n            unprocessedValue: '',\n            canProcess: false\n        };\n    }\n\n    private _onInputChanged = (e?: any, value?: string) => {\n        const newValue = value || '';\n        this.setState({\n            userDefinedValue: newValue,\n            canProcess: this.state.unprocessedValue !== newValue\n        });\n    }\n\n    private _Encode = () => {\n        const { userDefinedValue } = this.state;\n        this.setState({\n            unprocessedValue: userDefinedValue,\n            processedValue: encodeURI(userDefinedValue),\n            canProcess: false\n        });\n    }\n\n    private _Decode = () => {\n        const { userDefinedValue } = this.state;\n        this.setState({\n            unprocessedValue: userDefinedValue,\n            processedValue: decodeURI(userDefinedValue),\n            canProcess: false\n        });\n    }\n\n    public render() {\n        const { userDefinedValue, processedValue, canProcess } = this.state;\n        return <>\n            <Stack className=\"UrlEncoder\" tokens={{ childrenGap: 20, padding: 20 }}>\n                <Stack horizontal grow tokens={{ childrenGap: 10 }}>\n                    <TextField label=\"Input\" multiline value={userDefinedValue} rows={20} onChange={this._onInputChanged} />\n                    <TextField label=\"Output\" multiline value={processedValue} rows={20} readOnly />\n                </Stack>\n                <Stack horizontal grow tokens={{ childrenGap: 10 }}>\n                    <PrimaryButton text=\"Encode\" disabled={!canProcess} onClick={this._Encode} />\n                    <PrimaryButton text=\"Decode\" disabled={!canProcess} onClick={this._Decode} />\n                </Stack>\n            </Stack>\n        </>;\n    }\n}\n","import React from 'react';\n\nexport default class Home extends React.Component<any> {\n    public render() {\n        return <></>;\n    }\n}","import React from 'react';\nimport { CommandBar, IContextualMenuItem } from '@fluentui/react';\n\nexport default class NavBar extends React.Component<any> {\n    private _onNavLinkClicked = (ev?: any, item?: IContextualMenuItem) => {\n        if (ev) {\n            ev.preventDefault();\n        }\n        if (item && item.href) {\n            this.props.history.push(item.href);\n        }\n    }\n\n    public render() {\n        return <CommandBar\n            items={[\n                {\n                    key: \"brand\",\n                    text: \"Troy's Site\",\n                    href: \"/\",\n                    onClick: this._onNavLinkClicked\n                },\n                {\n                    key: \"tools\",\n                    text: \"Tools\",\n                    subMenuProps: {\n                        items: [\n                            {\n                                key: \"url-encoder\",\n                                text: \"URL Encoder\",\n                                href: \"/tools/url-encoder\",\n                                onClick: this._onNavLinkClicked\n                            }\n                        ]\n                    }\n                }\n            ]}\n        />;\n    }\n}","import React from \"react\";\nimport UrlEncoder from \"./pages/UrlEncoder/UrlEncoder\";\nimport Home from './pages/Home/Home';\nimport NavBar from './components/NavBar';\nimport \"./App.css\";\nimport { Route, Switch } from \"react-router\";\nimport { ScrollablePane, Sticky } from \"@fluentui/react\";\n\nexport default class App extends React.Component {\n    public render() {\n        return (\n            <ScrollablePane className=\"App\">\n                <Sticky stickyClassName=\"NavBar\">\n                    <Route path=\"*\" component={NavBar} />\n                </Sticky>\n                <Switch>\n                    <Route exact path=\"/\" component={Home} />\n                    <Route exact path=\"/tools/url-encoder\" component={UrlEncoder} />\n                </Switch>\n            </ScrollablePane>\n        );\n    }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ThemeProvider } from '@fluentui/react';\nimport { createTheme } from \"@fluentui/style-utilities\";\n\nconst appTheme = createTheme({\n    palette: {\n        themePrimary: \"#a8a8a8\",\n        themeLighterAlt: \"#070707\",\n        themeLighter: \"#1b1b1b\",\n        themeLight: \"#323232\",\n        themeTertiary: \"#656565\",\n        themeSecondary: \"#949494\",\n        themeDarkAlt: \"#b1b1b1\",\n        themeDark: \"#bdbdbd\",\n        themeDarker: \"#cecece\",\n        neutralLighterAlt: \"#4a4a4a\",\n        neutralLighter: \"#525252\",\n        neutralLight: \"#5e5e5e\",\n        neutralQuaternaryAlt: \"#656565\",\n        neutralQuaternary: \"#6b6b6b\",\n        neutralTertiaryAlt: \"#848484\",\n        neutralTertiary: \"#c8c8c8\",\n        neutralSecondary: \"#d0d0d0\",\n        neutralPrimaryAlt: \"#dadada\",\n        neutralPrimary: \"#ffffff\",\n        neutralDark: \"#f4f4f4\",\n        black: \"#f8f8f8\",\n        white: \"#424242\",\n    },\n});\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <ThemeProvider theme={appTheme}>\n                <App />\n            </ThemeProvider>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}